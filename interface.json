{
  "name": "Fiat Swap",
  "address": {
    "ropsten": "0xF95A3a86E680f9AC3e56875fbf68BB370892ac3c",
    "optimism": "0xad868E2048A73181163074944e8E12698F7BCFD1",
    "arbitrum": "0xcB3420B31B75a938D937713C434d2379640E496F"
  },
  "descriptions": {
    "contract": "This contract allows you to buy tokens from any person who uses the same digital payment service as you, even if you don't know or trust them. For now, only Venmo is supported. Every transaction has a unique offerID which can be computed from the off-chain payment details via the offerID function. As long as no third party knows (or guesses) the buyerSellerSecret, the offer ID does not reveral the off-chain payment details, so they stay private between buyer and seller.",
    "buyTokens": "Accept an offer you received, by generating an enclave proof that you made the specific online payment identified by offerID.",
    "offerID": "Compute the offerID from the payment details:\n handle (username) of the seller, the price in cents, the message you must use in the transaction, the payment service (must be 'Venmo' for now), and a secret known to both parties.",
    "retractOffer": "Retract an offer you made, if its timelock has lapsed.",
    "secondsLocked": "Check how many seconds are left for the buyer to verify the online payment for a specific offer, before the seller can retract it again.",
    "amountOffered": "Check how much, if any, ETH you would get for accepting a specific offerID.",
    "offerTokens": "Make an offer to a specific buyer, by locking ETH for some period of time in which only the buyer can withdraw it via an enclave proof that they performed the fiat transaction identified by offerID."
  },
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "offerID",
          "type": "bytes32"
        }
      ],
      "name": "buyTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "sellerHandle",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "priceInCent",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "transactionMessage",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "paymentService",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "buyerSellerSecret",
          "type": "string"
        }
      ],
      "name": "offerID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "offerID",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "buyerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lockForSeconds",
          "type": "uint256"
        }
      ],
      "name": "offerTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "offerID",
          "type": "bytes32"
        }
      ],
      "name": "retractOffer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "offerID",
          "type": "bytes32"
        }
      ],
      "name": "secondsLocked",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "offerID",
          "type": "bytes32"
        }
      ],
      "name": "amountOffered",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ETH",
          "type": "uint256",
          "decimals": 18
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ]
}
